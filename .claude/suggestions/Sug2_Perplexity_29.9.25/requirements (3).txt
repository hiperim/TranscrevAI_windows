# TranscrevAI Optimized - Professional Dependencies
# Otimizado para hardware mínimo (4 cores, 8GB RAM) com foco em português brasileiro

# ===== CORE WEB FRAMEWORK =====
fastapi>=0.104.1,<0.105.0
uvicorn[standard]>=0.24.0,<0.25.0
jinja2>=3.1.2,<3.2.0
python-multipart>=0.0.6,<0.1.0
websockets>=11.0,<12.0

# ===== AUDIO PROCESSING (BROWSER-SAFE) =====
sounddevice>=0.4.6,<0.5.0       # Real-time audio recording
soundfile>=0.12.1,<0.13.0       # Audio file I/O
librosa>=0.10.1,<0.11.0         # Audio analysis and processing
numpy>=1.24.3,<1.26.0           # Numerical operations (fixed version for stability)
scipy>=1.11.0,<1.12.0           # Scientific computing

# ===== TRANSCRIPTION ENGINE =====
openai-whisper>=20231117         # Fixed version for PT-BR optimization
torch>=2.1.0,<2.3.0             # PyTorch CPU-only
torchaudio>=2.1.0,<2.3.0        # Audio processing for PyTorch
transformers>=4.35.0,<4.37.0    # For model compatibility

# ===== MACHINE LEARNING (DIARIZATION) =====
scikit-learn>=1.3.0,<1.4.0      # Speaker clustering and classification
matplotlib>=3.7.0,<3.8.0        # For audio visualization (lightweight)

# ===== SYSTEM MONITORING & OPTIMIZATION =====
psutil>=5.9.0,<6.0.0            # System resource monitoring
memory-profiler>=0.61.0,<0.62.0 # Memory usage tracking

# ===== FILE HANDLING =====
aiofiles>=23.2.1,<24.0.0        # Async file operations
pathlib2>=2.3.7                 # Path handling utilities (backport)

# ===== UTILITIES =====
python-dotenv>=1.0.0,<1.1.0     # Environment variables
pydantic>=2.4.0,<2.6.0          # Data validation
typing-extensions>=4.8.0,<5.0.0  # Type hints compatibility

# ===== LOGGING & DEBUGGING =====
loguru>=0.7.2,<0.8.0            # Enhanced logging
rich>=13.6.0,<14.0.0            # Beautiful terminal output

# ===== DEVELOPMENT (OPTIONAL) =====
pytest>=7.4.0,<8.0.0            # Testing framework
pytest-asyncio>=0.21.0,<0.22.0  # Async testing support

# ===== PERFORMANCE OPTIMIZATIONS =====
# ujson>=5.8.0,<6.0.0           # Faster JSON (optional, uncomment if needed)
# orjson>=3.9.0,<4.0.0          # Even faster JSON (alternative)

# ===== AUDIO FORMAT SUPPORT =====
ffmpeg-python>=0.2.0,<0.3.0     # FFmpeg wrapper for format conversion

# ===== ADDITIONAL DEPENDENCIES FOR PRODUCTION =====
gunicorn>=21.2.0,<22.0.0        # WSGI HTTP Server (alternative to uvicorn)

# ===== VERSION NOTES =====
# Python 3.8+ required (tested up to 3.11)
# Optimized for CPU-only processing
# GPU support available but not required
# Memory usage: ~1-2GB typical, ~3GB peak
# Tested on Ubuntu 20.04+, Windows 10+, macOS 10.15+

# ===== INSTALLATION NOTES =====
# For Windows users:
# pip install torch torchaudio --index-url https://download.pytorch.org/whl/cpu
#
# For macOS Apple Silicon:
# Consider using conda for some packages:
# conda install pytorch torchaudio -c pytorch
#
# For Linux with limited resources:
# Use --no-cache-dir flag to reduce memory usage during installation:
# pip install --no-cache-dir -r requirements.txt

# ===== OPTIONAL DEPENDENCIES =====
# Uncomment based on your needs:
# 
# For GPU support (NVIDIA):
# torch>=2.1.0+cu118
# torchaudio>=2.1.0+cu118
#
# For Apple Metal acceleration:
# torch>=2.1.0
# (Metal acceleration included in standard torch for macOS)
#
# For enhanced audio formats:
# pydub>=0.25.1               # More audio format support
# mutagen>=1.47.0             # Audio metadata
#
# For advanced diarization:
# pyannote.audio>=3.0.0       # Advanced speaker diarization (requires more memory)
# speechbrain>=0.5.0          # Advanced speech processing (optional)

# ===== BROWSER-SAFE OPTIMIZATIONS =====
# All packages selected for:
# - Minimal memory footprint
# - Fast startup time
# - No blocking operations
# - CPU-only processing (no GPU locks)
# - Compatibility with concurrent processing
# - Thread-safe operations